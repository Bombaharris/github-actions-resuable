name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version to start'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      pull-requests: write
    steps:
      - name: Validate Semver
        id: semver
        uses: matt-usurp/validate-semver@v2
        with:
          version: ${{ github.event.inputs.version }}

      - name: Install dependencies
        run: |
          sudo apt-get -y install git-flow

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Initialize mandatory git config
        run: |
          git config user.name "Release manager"
          git config user.email noreply@github.com

      - name: Init git flow
        run: |
          git checkout master
          git checkout develop
          git flow init -d

      - name: Release start
        run: |
          git flow release start v${{ steps.semver.outputs.version }}

      - name: Release publish
        run: |
          git flow release publish

      - name: Release finish
        run: |
          git flow release finish v${{ steps.semver.outputs.version }} -m "chore: version bumped" v${{ steps.semver.outputs.version }}

      - name: Release publish tags
        run: |
          git push --all --follow-tags --no-verify

      - name: Checkout tag
        run: |
          git checkout v${{ steps.semver.outputs.version }}

      - name: Retrive GitHub API CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ steps.semver.outputs.version }}
          writeToFile: true

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.semver.outputs.version }}
          release_name: v${{ steps.semver.outputs.version }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: false
          prerelease: false
